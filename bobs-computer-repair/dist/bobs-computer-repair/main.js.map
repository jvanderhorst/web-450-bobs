{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/amt-total/amt-total.component.css","webpack:///./src/app/amt-total/amt-total.component.html","webpack:///./src/app/amt-total/amt-total.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/internal-server-error/internal-server-error.component.css","webpack:///./src/app/internal-server-error/internal-server-error.component.html","webpack:///./src/app/internal-server-error/internal-server-error.component.ts","webpack:///./src/app/log-file/log-file.component.css","webpack:///./src/app/log-file/log-file.component.html","webpack:///./src/app/log-file/log-file.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/management/management.component.css","webpack:///./src/app/management/management.component.html","webpack:///./src/app/management/management.component.ts","webpack:///./src/app/not-found-page/not-found-page.component.css","webpack:///./src/app/not-found-page/not-found-page.component.html","webpack:///./src/app/not-found-page/not-found-page.component.ts","webpack:///./src/app/question-manager/question-manager.component.css","webpack:///./src/app/question-manager/question-manager.component.html","webpack:///./src/app/question-manager/question-manager.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/reset-password/reset-password.component.css","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/role-manager/role-manager.component.css","webpack:///./src/app/role-manager/role-manager.component.html","webpack:///./src/app/role-manager/role-manager.component.ts","webpack:///./src/app/security-questions/security-questions.component.css","webpack:///./src/app/security-questions/security-questions.component.html","webpack:///./src/app/security-questions/security-questions.component.ts","webpack:///./src/app/service-repair/service-repair.component.css","webpack:///./src/app/service-repair/service-repair.component.html","webpack:///./src/app/service-repair/service-repair.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/question.service.ts","webpack:///./src/app/services/repair.service.ts","webpack:///./src/app/services/role.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\r\\n    background-color: #12afb5;\\r\\n    color: rgb(58, 57, 57);\\r\\n    margin: 0 auto;\\r\\n    width: 80%;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    padding-right: 40px;\\r\\n    padding-bottom: 10px;\\r\\n    padding-left: 40px;\\r\\n    border-top-right-radius: 5px;\\r\\n    border-top-left-radius: 5px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    text-align: center;\\r\\n    -o-object-fit: fill;\\r\\n       object-fit: fill;\\r\\n    border-bottom-left-radius: 20px;\\r\\n    border-top-right-radius: 20px;\\r\\n    border-top-left-radius: 20px;\\r\\n    border-bottom-right-radius: 20px;\\r\\n}\\r\\n\\r\\n#tech {\\r\\n    display: block;\\r\\n    width: 50%;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    text-align: center;\\r\\n    -o-object-fit: fill;\\r\\n       object-fit: fill;\\r\\n    border-bottom-left-radius: 20px;\\r\\n    border-top-right-radius: 20px;\\r\\n    border-top-left-radius: 20px;\\r\\n    border-bottom-right-radius: 20px; \\r\\n}\\r\\n\\r\\np {\\r\\n    text-align: center;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.formGroup2 {\\r\\n    color: black;\\r\\n    background-color: white;\\r\\n    margin: 0 auto;\\r\\n    width: 80%;\\r\\n    position: initial;\\r\\n    padding-top: 50px;\\r\\n    padding-right: 30px;\\r\\n    padding-bottom: 10px;\\r\\n    padding-left: 50px;\\r\\n    border-bottom-right-radius: 5px;\\r\\n    border-bottom-left-radius: 5px;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    background-color: rgb(24, 23, 23);\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    color: white;\\r\\n    margin: 0 auto;\\r\\n    width: 80%;\\r\\n    position: initial;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    padding-right: 40px;\\r\\n    padding-bottom: 10px;\\r\\n    padding-left: 40px;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.icons {\\r\\n    font-size: 30px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<h1>About Us</h1>\\r\\n<form class=\\\"formGroup2\\\">\\r\\n    <div class=\\\"topSection\\\">\\r\\n    <img src=\\\"../../assets/aboutUs_image1.jpg\\\"><br />\\r\\n    <p><i>\\\"When you believe in your capabilities, the possibilities are endless.\\\"</i><br>-Robert Levi</p>\\r\\n    </div><hr />\\r\\n        \\r\\n          <h3>Our mission : </h3><br><p>Founded in 1996 by a devoted man named \\r\\n          Robert Levi, he launched the company's first online repair and \\r\\n          service shop.  What started as a side business, begun flourishing \\r\\n          into what is now a high-end deliverable repair and service business.  \\r\\n          Top-certified technicians are available both on-side and \\r\\n          over the phone to provide the upmost customer service to \\r\\n          their customers.  Bob's Repair Shop stays up-to-date on \\r\\n          all procedures and products.  Our outstanding staff \\r\\n          specializes in speedy recovery, guaranteed!</p><hr />\\r\\n\\r\\n          <h3>What we have to offer :</h3><br />\\r\\n          <img id=\\\"tech\\\" src=\\\"../../assets/ourMission_.jpg\\\"><br />\\r\\n          <p>Bob's Computer Repair Shop sells not only the best repair \\r\\n          products on the market but also proves top-notch, certified \\r\\n          technicians who specialize in many computer services you may \\r\\n          need.  Whether it be spyware removal, a computer tune-up, or \\r\\n          simply a password reset, we've got you covered!  Receive \\r\\n          low-rate services available when you need it.</p>\\r\\n          <hr />\\r\\n           \\r\\n          <br /><h3>Our technician services :</h3><br />\\r\\n          <img id=\\\"tech\\\" src=\\\"../../assets/servicesOffer.jpg\\\"><br />\\r\\n          <div class=\\\"icons\\\">\\r\\n          <mat-icon>enhanced_encryption</mat-icon> Password Reset <br>\\r\\n          Spyware Removal <mat-icon>block</mat-icon><br>\\r\\n          <mat-icon>unarchive</mat-icon> RAM Upgrade<br>\\r\\n          Software Installation <mat-icon>settings_system_daydream</mat-icon><br>\\r\\n          <mat-icon>cast_connected</mat-icon> Computer Tune-Up  <br>\\r\\n          Keyboard Cleaning <mat-icon>keyboard</mat-icon> <br>\\r\\n          <mat-icon>save</mat-icon>Disk Clean-up <br>\\r\\n          </div>\\r\\n          <hr />\\r\\n          <div class=\\\"button\\\">\\r\\n          <button class=\\\"button2\\\" mat-raised-button (click)=\\\"login()\\\">View Products</button><br>\\r\\n          </div>\\r\\n          <br />\\r\\n</form>\\r\\n<br />\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<script src=\\\"node_modules/chart.js/src/chart.js\\\"></script>\\r\\n\\\\\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-amt-total',\r\n  templateUrl: './amt-total.component.html',\r\n  styleUrls: ['./amt-total.component.css']\r\n})\r\n\r\n\r\nexport class AmtTotalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { SecurityQuestionsComponent } from './security-questions/security-questions.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\n\r\nimport { AmtTotalComponent} from './amt-total/amt-total.component';\r\n\r\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\r\nimport { InternalServerErrorComponent } from './internal-server-error/internal-server-error.component';\r\nimport { ServiceRepairComponent } from './service-repair/service-repair.component';\r\nimport { RoleManagerComponent } from './role-manager/role-manager.component';\r\nimport { LogFileComponent } from './log-file/log-file.component';\r\n\r\nimport { QuestionManagerComponent } from './question-manager/question-manager.component';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent},\r\n  { path: 'amt-total', component: AmtTotalComponent},\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'contact', component: ContactComponent },\r\n  { path: 'management', component: ManagementComponent, canActivate: [AuthGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'reset-password', component: ResetPasswordComponent },\r\n  { path: 'security-questions', component: SecurityQuestionsComponent },\r\n  { path: 'management', component: ManagementComponent, canActivate: [AuthGuard] },\r\n  { path: 'service-repair', component: ServiceRepairComponent, canActivate: [AuthGuard] },\r\n  { path: 'not-found-page', component: NotFoundPageComponent },\r\n  { path: 'internal-server-error', component: InternalServerErrorComponent },\r\n  { path: 'role-manager', component: RoleManagerComponent, canActivate: [AuthGuard] },\r\n  { path: 'log-file', component: LogFileComponent, canActivate: [AuthGuard] },\r\n  { path: 'question-manager', component: QuestionManagerComponent, canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: 'not-found-page' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"/*Body Styles*/\\r\\nbody {\\r\\n    color: white;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    top: 0;\\r\\n}\\r\\n.wrapper {\\r\\n    width: 80%;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    padding-top: 100px;\\r\\n}\\r\\n/*Toolbar*/\\r\\n.menu {\\r\\n    background-color: rgb(24, 23, 23);\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100% !important;\\r\\n}\\r\\n.container a {\\r\\n     text-decoration: none;\\r\\n     color: #fff;\\r\\n     \\r\\n}\\r\\n\"","module.exports = \"<body class=\\\"mat-app-background\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <mat-toolbar class=\\\"menu\\\" role=\\\"header\\\" color=\\\"primary\\\">\\r\\n      <mat-toolbar-row>\\r\\n        <a [routerLink]=\\\"['/']\\\">Bob's Online Computer Repair Shop</a>\\r\\n        <div fxFlex></div>\\r\\n        <button *ngIf=\\\"authService.isLoggedIn()\\\" mat-button class=\\\"button1\\\" [matMenuTriggerFor]=\\\"manage\\\">Manage</button><br />&nbsp;&nbsp;\\r\\n        <mat-menu #manage=\\\"matMenu\\\">\\r\\n            <button mat-menu-item [routerLink]=\\\"['/management']\\\">Users</button>\\r\\n            <button mat-menu-item [routerLink]=\\\"['/question-manager']\\\">Questions</button>\\r\\n            <button mat-menu-item [routerLink]=\\\"['/role-manager']\\\">Roles</button>\\r\\n            <button mat-menu-item [routerLink]=\\\"['/log-file']\\\">Logs</button>\\r\\n        </mat-menu>\\r\\n        <button mat-button class=\\\"button2\\\" [routerLink]=\\\"['/service-repair']\\\">Services</button><br />&nbsp;&nbsp;\\r\\n        <button mat-button class=\\\"button1\\\" [routerLink]=\\\"['/about']\\\">About Us</button><br/>&nbsp;&nbsp;\\r\\n        <button mat-button class=\\\"button2\\\" [routerLink]=\\\"['/contact']\\\">Contact Info</button><br />&nbsp;&nbsp;\\r\\n        <button *ngIf=\\\"authService.isLoggedIn()\\\" mat-button class=\\\"button1\\\" (click)=\\\"logout()\\\">Log Out</button><br />&nbsp;&nbsp;\\r\\n        </mat-toolbar-row>\\r\\n      </mat-toolbar>\\r\\n      <!--component view wrapper-->\\r\\n      <div class=\\\"wrapper\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n  </div>  \\r\\n\\r\\n</body>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AuthService }  from './services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './services/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  constructor(\r\n    private authService: AuthService, \r\n    private userService: UserService, \r\n    private router: Router) { }\r\n  \r\n  logout(){\r\n    this.authService.deleteToken();\r\n    this.router.navigate([''])\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { SecurityQuestionsComponent } from './security-questions/security-questions.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\r\nimport { InternalServerErrorComponent } from './internal-server-error/internal-server-error.component';\r\nimport { ServiceRepairComponent } from './service-repair/service-repair.component';\r\nimport { RoleManagerComponent } from './role-manager/role-manager.component';\r\nimport { LogFileComponent } from './log-file/log-file.component';\r\nimport { AmtTotalComponent } from './amt-total/amt-total.component';\r\n\r\nimport {MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule,\r\n        MatToolbarModule, MatIconModule, MatMenuModule} from '@angular/material';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nimport { AuthService } from './services/auth.service';\r\nimport { UserService } from './services/user.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { QuestionManagerComponent } from './question-manager/question-manager.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    SecurityQuestionsComponent,\r\n    ManagementComponent,\r\n    ResetPasswordComponent,\r\n    AboutComponent,\r\n    ContactComponent,\r\n    AmtTotalComponent,\r\n    NotFoundPageComponent,\r\n    InternalServerErrorComponent,\r\n    ServiceRepairComponent,\r\n    RoleManagerComponent,\r\n    LogFileComponent,\r\n    QuestionManagerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [AuthService, UserService, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"h1 {\\r\\n    background-color: #12afb5;\\r\\n    color: rgb(58, 57, 57);\\r\\n    margin: 0 auto;\\r\\n    width: 70%;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    padding-right: 40px;\\r\\n    padding-bottom: 10px;\\r\\n    padding-left: 40px;\\r\\n    border-top-right-radius: 5px;\\r\\n    border-top-left-radius: 5px;\\r\\n}\\r\\n\\r\\n.formGroup2 {\\r\\n    color: black;\\r\\n    background-color: white;\\r\\n    margin: auto;\\r\\n    width: 70%;\\r\\n    position: initial;\\r\\n    padding-top: 30px;\\r\\n    padding-right: 30px;\\r\\n    padding-bottom: 30px;\\r\\n    padding-left: 50px;\\r\\n    border-bottom-right-radius: 5px;\\r\\n    border-bottom-left-radius: 5px;\\r\\n}\\r\\n\\r\\n.contactForm {\\r\\n  \\r\\n  text-align: center;\\r\\n  font-size: 20px;\\r\\n  position: absolute;\\r\\n  left: 54%;\\r\\n  margin-left: -3px;\\r\\n  top: 36%;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    width: 44%;\\r\\n    margin: auto;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    border-bottom-left-radius: 8px;\\r\\n    border-top-right-radius: 8px;\\r\\n    border-top-left-radius: 8px;\\r\\n    border-bottom-right-radius: 8px;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\na:hover {\\r\\n  text-decoration: none;\\r\\n\\r\\n}\\r\\n\\r\\n.fa-facebook {\\r\\n    background: white;\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n.fa-twitter {\\r\\n    background: white;\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n.fa-linkedin {\\r\\n    background: white;\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n.fa-instagram {\\r\\n    background: white;\\r\\n    color: black;\\r\\n  }\"","module.exports = \"<h1>Contact Us</h1>\\r\\n<form class=\\\"formGroup2\\\"><br /><br>\\r\\n  <div class=\\\"image\\\">\\r\\n  <img src=\\\"../../assets/contact_.jpg\\\">\\r\\n  </div>\\r\\n\\r\\n  <br /><div class=\\\"contactForm\\\">\\r\\n  Bob's Computer Repair Shop <br />\\r\\n  bob@bcrs.com <br />\\r\\n  1-800-662-2222 <br />\\r\\n  <a href=\\\"https://www.linkedin.com/\\\" class=\\\"fa fa-linkedin\\\"></a>&nbsp;&nbsp;\\r\\n  <a href=\\\"https://www.instagram.com/\\\" class=\\\"fa fa-instagram\\\"></a>&nbsp;&nbsp;\\r\\n  <a href=\\\"https://www.facebook.com/\\\" class=\\\"fa fa-facebook\\\"></a>&nbsp;&nbsp;\\r\\n  <a href=\\\"https://twitter.com/?lang=en\\\" class=\\\"fa fa-twitter\\\"></a>&nbsp;&nbsp;\\r\\n  <br />\\r\\n  1001 Einstein Way <br>\\r\\n  Hill Valley, CA 11111\\r\\n  </div>\\r\\n  </form>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService }  from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  \r\n  canActivate(\r\n    next: ActivatedRouteSnapshot, \r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      if(this.authService.isLoggedIn()){\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    \r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \".page-wrapper {\\r\\n    background-image: url('500error-justin-little-650865-unsplash.jpg');\\r\\n    background-size: cover;\\r\\n    background-repeat: none;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: fixed;\\r\\n    top: 70px;\\r\\n    left: 0;\\r\\n}\\r\\n\\r\\n.message-wrapper {\\r\\n    width: 40%;\\r\\n    height: 100%;\\r\\n    background: rgba(255, 255, 255, 0.2);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.message {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.message h1 {\\r\\n    font-weight: 900;\\r\\n    font-size: 10em;\\r\\n}\\r\\n\\r\\n.message h3 {\\r\\n    font-weight: 400;\\r\\n    font-size: 3em;\\r\\n}\"","module.exports = \"<div class=\\\"page-wrapper\\\">\\r\\n    <div class=\\\"message-wrapper\\\">\\r\\n    <div class=\\\"message\\\">\\r\\n      <h1>error</h1>\\r\\n      <h3>internal server</h3>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-internal-server-error',\r\n  templateUrl: './internal-server-error.component.html',\r\n  styleUrls: ['./internal-server-error.component.css']\r\n})\r\nexport class InternalServerErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3>Log Files</h3>\\r\\n<table class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\">Logs</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr >\\r\\n      <th scope=\\\"row\\\">{{data}}</th>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-log-file',\r\n  templateUrl: './log-file.component.html',\r\n  styleUrls: ['./log-file.component.css']\r\n})\r\nexport class LogFileComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.getLog\r\n  }\r\n\r\n  getLog(){\r\n    this.http.get('/api/log').subscribe(data => { \r\n      console.log(data)\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.mat-form-field-empty.mat-form-field-label {\\r\\n  color:#020024;\\r\\n  background-color: red;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.register {\\r\\n  color: teal;\\r\\n  font-size: 16px;\\r\\n  position: initial;\\r\\n  width: 300px;\\r\\n  height: 100px;\\r\\n }\\r\\n\\r\\n.button {\\r\\n   text-align: right;\\r\\n   font-size: 16px;\\r\\n   color: gray;\\r\\n }\"","module.exports = \"<br />\\r\\n<h2>Login</h2>\\r\\n<form class=\\\"formGroup\\\" #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"signInForm.valid && onSubmit(signInForm)\\\">\\r\\n  <div class=\\\"example-container\\\">\\r\\n    <mat-form-field>\\r\\n      <input \\r\\n      #username=\\\"ngModel\\\"\\r\\n      [(ngModel)]=\\\"login.username\\\"\\r\\n      type=\\\"text\\\" \\r\\n      matInput \\r\\n      placeholder\\r\\n      value=\\\"username\\\"\\r\\n      name=\\\"username\\\"  \\r\\n      required\\r\\n      >\\r\\n      <mat-icon>person</mat-icon> &nbsp; \\r\\n    </mat-form-field><br />\\r\\n    <mat-form-field>\\r\\n      <input \\r\\n      #password=\\\"ngModel\\\"\\r\\n      [(ngModel)]=\\\"login.password\\\"\\r\\n      type=\\\"password\\\" \\r\\n      matInput \\r\\n      placeholder\\r\\n      value=\\\"password\\\"\\r\\n      name=\\\"password\\\"  \\r\\n      required\\r\\n      >\\r\\n      <mat-icon>vpn_key</mat-icon> &nbsp; \\r\\n    </mat-form-field><br />\\r\\n    <button class=\\\"button2\\\" mat-raised-button type=\\\"submit\\\" >Submit</button><br><br />\\r\\n  </div>\\r\\n  <div class=\\\"register\\\">\\r\\n    <p>Not a member? <a [routerLink]=\\\"['/register']\\\">Register</a> now!</p>\\r\\n    <p>Forgot password? <a [routerLink]=\\\"['/security-questions']\\\">Recover</a> here!</p>\\r\\n  </div>\\r\\n</form><br><br>\\r\\n\\r\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n  {{serverErrorMessages}}\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserService } from '../services/user.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from \"@angular/router\";\r\nimport { first } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n \r\n  constructor(private authService: AuthService, private router : Router) { }\r\n\r\n  login = {\r\n    username :'',\r\n    password:''\r\n  };\r\n  serverErrorMessages: string;\r\n  user: any;\r\n\r\n  ngOnInit() {\r\n    if(this.authService.isLoggedIn())\r\n    this.router.navigateByUrl('/service-repair');\r\n  }\r\n\r\n  onSubmit(form : NgForm){\r\n    this.authService.login(form.value).subscribe(\r\n      res => {\r\n        this.authService.setToken(res['token']);\r\n        this.router.navigateByUrl('/service-repair');\r\n      },\r\n      err => {\r\n        this.serverErrorMessages = err.error.message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n    color: black;\\r\\n    background-color: white;\\r\\n    opacity: 50%;\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n\\r\\nh3 {\\r\\n    background-color: #19ccd0;\\r\\n    color: rgb(58, 57, 57);\\r\\n    opacity: 50%;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-radius: 10px;\\r\\n}\"","module.exports = \"<h3>User Management</h3>\\r\\n<table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">ID</th>\\r\\n            <th scope=\\\"col\\\">User</th>\\r\\n            <th scope=\\\"col\\\">Email</th>\\r\\n            <th scope=\\\"col\\\">Role</th>\\r\\n            <th scope=\\\"col\\\">Last Updated</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of users\\\">\\r\\n            <th scope=\\\"row\\\">{{user.userId}}</th>\\r\\n            <td>{{user.firstName}} {{user.lastName}}</td>\\r\\n            <td>{{user.email}}</td>\\r\\n            <td>Admin</td>\\r\\n            <td>{{user.dateCreated | date: 'MMM d, y'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <form>\\r\\n        <button class=\\\"button1\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Add User</button>&nbsp;\\r\\n        <button class=\\\"button1\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Edit User</button>&nbsp;\\r\\n        <button class=\\\"button3\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Delete User</button>&nbsp;\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n      </form>\\r\\n      \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service'\r\nimport { User } from '../models/user';\r\n\r\n@Component({\r\n  selector: 'app-management',\r\n  templateUrl: './management.component.html',\r\n  styleUrls: ['./management.component.css']\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n  users: User[];\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n  }\r\n  getUser(): void {\r\n    this.userService.getUser()\r\n    .subscribe(users => this.users = users)\r\n  }\r\n}\r\n","module.exports = \".page-wrapper {\\r\\n    background-image: url('404error-david-kovalenko-414249-unsplash.jpg');\\r\\n    background-size: cover;\\r\\n    background-repeat: none;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: fixed;\\r\\n    top: 70px;\\r\\n    left: 0;\\r\\n}\\r\\n\\r\\n.message-wrapper {\\r\\n    width: 40%;\\r\\n    height: 100%;\\r\\n    background: rgba(255, 255, 255, 0.2);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.message {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.message h1 {\\r\\n    font-weight: 900;\\r\\n    font-size: 10em;\\r\\n}\\r\\n\\r\\n.message h3 {\\r\\n    font-weight: 400;\\r\\n    font-size: 3em;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"message-wrapper\\\">\\r\\n  <div class=\\\"message\\\">\\r\\n    <h1>404</h1>\\r\\n    <h3>That's not what you're looking,<br> but how did that happen?</h3>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.css']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 75%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field-empty.mat-form-field-label {\\r\\n    color:#020024;\\r\\n    background-color: red;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    color: black;\\r\\n    background-color: white;\\r\\n    opacity: 50%;\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  h3 {\\r\\n    background-color: #19ccd0;\\r\\n    color: rgb(58, 57, 57);\\r\\n    opacity: 50%;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-radius: 10px;\\r\\n}\"","module.exports = \"<h2>Add New Question</h2>\\r\\n  <form class=\\\"formGroup\\\" #addQuestionForm=\\\"ngForm\\\" (ngSubmit)=\\\"addQuestionForm.valid && onSubmit(addQuestionForm)\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #questionId=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"questionService.selectedQuestion.questionId\\\"\\r\\n        name=\\\"questionId\\\"\\r\\n        placeholder=\\\"Question Id\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :addQuestionForm.submitted && !questionId.valid }\\\">\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #lastName=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"questionService.selectedQuestion.questionName\\\"\\r\\n        name=\\\"questionName\\\"\\r\\n        placeholder=\\\"Question Name\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :addQuestionForm.submitted && !questionName.valid }\\\">\\r\\n      </mat-form-field><br />\\r\\n      <br />\\r\\n      \\r\\n      \\r\\n  </div> \\r\\n  \\r\\n    <button class=\\\"button1\\\" mat-raised-button type=\\\"submit\\\">Add Question</button>\\r\\n    <br />\\r\\n    \\r\\n    <div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\r\\n      Saved successfully\\r\\n    </div>\\r\\n    \\r\\n    <!-- Error message -->\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n      {{serverErrorMessages}}\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n<h3>Question Management</h3>\\r\\n<table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Question ID</th>\\r\\n            <th scope=\\\"col\\\">Question Name</th>\\r\\n            <th scope=\\\"col\\\">Last Updated</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let question of questions\\\">\\r\\n            <th scope=\\\"row\\\">{{question.questionId}}</th>\\r\\n            <td>{{question.questionName}}</td>\\r\\n            <td>{{question.dateUpdated | date: 'MMM d, y'}}</td>\\r\\n            <td><button (click)=\\\"onDelete(question.questionId, addQuestionForm)\\\"><mat-icon>delete</mat-icon></button></td>\\r\\n            <td><button (click)=\\\"onEdit(question)\\\"><mat-icon>edit</mat-icon></button></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <form>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Edit User</button>&nbsp;\\r\\n        <button class=\\\"button3\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Delete User</button>&nbsp;\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n      </form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { QuestionService } from '../services/question.service';\r\nimport { Question } from '../models/question';\r\n\r\n@Component({\r\n  selector: 'app-question-manager',\r\n  templateUrl: './question-manager.component.html',\r\n  styleUrls: ['./question-manager.component.css']\r\n})\r\nexport class QuestionManagerComponent implements OnInit {\r\n  showSucessMessage: boolean;\r\n  serverErrorMessages: string;\r\n  questions: Question[];\r\n  constructor(private questionService: QuestionService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllQuestions();\r\n  }\r\n  onSubmit(form: NgForm) {\r\n    this.questionService.postQuestion(form.value).subscribe(\r\n      res => {\r\n        this.showSucessMessage = true;\r\n        setTimeout(() => this.showSucessMessage = false, 4000);\r\n        this.resetForm(form);\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join('<br/>');\r\n        }\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong.Please try again';\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm(form: NgForm) {\r\n    this.questionService.selectedQuestion = {\r\n      questionId: '',\r\n      questionName: ''\r\n    };\r\n    form.resetForm();\r\n    this.serverErrorMessages = '';\r\n  }\r\n\r\n  getAllQuestions(): void {\r\n    this.questionService.getAllQuestions()\r\n    .subscribe(questions => this.questions = questions)\r\n  }\r\n\r\n  onDelete(questionName: string, form: NgForm) {\r\n    if(confirm ('Are you sure you want to delete this question?') == true) {\r\n      this.questionService.deleteQuestion(questionName).subscribe((res) => {\r\n        this.getAllQuestions();\r\n        alert('Deleted successfully')\r\n      })\r\n    }\r\n  }\r\n\r\n  onEdit(question: Question) {\r\n    this.questionService.selectedQuestion = question;\r\n    this.getAllQuestions();\r\n      \r\n  }\r\n\r\n  refreshquestionList() {\r\n    this.questionService.getAllQuestions().subscribe((res) => {\r\n      this.questionService.questions = res as Question[];\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"body{\\r\\n  background-size: 0;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.vl {\\r\\n    border-left: 1px solid rgb(193, 194, 193);\\r\\n    height: 400px;\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    margin-left: -3px;\\r\\n    top: 30%;\\r\\n    padding-right: 30px;\\r\\n    padding-left: 30px;\\r\\n  }\\r\\n\\r\\n.example-container2 {\\r\\n    font-size: 16px;\\r\\n    padding-left: 40px;\\r\\n    margin: 0;\\r\\n  }\\r\\n\\r\\n.example-container2 > * {\\r\\n    padding-right: 20px;\\r\\n    width: 90%;\\r\\n  }\\r\\n\\r\\np {\\r\\n    font-size: 14px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n.mat-form-field-empty.mat-form-field-label {\\r\\n    color:#020024;\\r\\n    background-color: red;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<h2>Register Here</h2>\\r\\n  <form class=\\\"formGroup\\\" #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #firstName=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.firstName\\\"\\r\\n        name=\\\"firstName\\\"\\r\\n        placeholder=\\\"First name\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !firstName.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !firstName.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #lastName=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.lastName\\\"\\r\\n        name=\\\"lastName\\\"\\r\\n        placeholder=\\\"Last name\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !lastName.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !lastName.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #email=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        placeholder=\\\"email\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !email.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      \\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #phoneNumber=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.phoneNumber\\\"\\r\\n        name=\\\"phoneNumber\\\"\\r\\n        placeholder=\\\"phone number\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !phoneNumber.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !phoneNumber.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #streetAddress=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.streetAddress\\\"\\r\\n        name=\\\"streetAddress\\\"\\r\\n        placeholder=\\\"Street Address\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !streetAddress.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !streetAddress.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #city=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.city\\\"\\r\\n        name=\\\"city\\\"\\r\\n        placeholder=\\\"city\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !city.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !city.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #state=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.state\\\"\\r\\n        name=\\\"state\\\"\\r\\n        placeholder=\\\"state\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !state.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !state.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #zipCode=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.zipCode\\\"\\r\\n        name=\\\"zipCode\\\"\\r\\n        placeholder=\\\"zip code\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !zipCode.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !zipCode.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #username=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.username\\\"\\r\\n        name=\\\"username\\\"\\r\\n        placeholder=\\\"username\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !username.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !username.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #password=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"password\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !password.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <!--<mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #password=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"confirm password\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !password.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field >\\r\\n        <mat-select   placeholder=\\\"security question 1\\\">\\r\\n        <mat-option *ngFor=\\\"let question of question.questionName\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #questionOne=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.questionOne\\\"\\r\\n        name=\\\"questionOne\\\"\\r\\n        placeholder=\\\"security question\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !questionOne.valid }\\\">{{question.questionName}}\\r\\n      </mat-option>\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !questionOne.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n        </mat-select>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n          <mat-select placeholder=\\\"security question 2\\\">\\r\\n        <mat-option\\r\\n        type=\\\"text\\\"\\r\\n        #questionTwo=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.questionTwo\\\"\\r\\n        name=\\\"questionTwo\\\"\\r\\n        placeholder=\\\"security question\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !questionTwo.valid }\\\">{{question.questionName}}\\r\\n      </mat-option>\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !questionTwo.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n        </mat-select>\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n          <mat-select placeholder=\\\"security question 3\\\">\\r\\n        <mat-option\\r\\n        type=\\\"text\\\"\\r\\n        #questionThree=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"authService.selectedUser.questionThree\\\"\\r\\n        name=\\\"questionThree\\\"\\r\\n        placeholder=\\\"security question\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !questionThree.valid }\\\">{{question.questionName}}\\r\\n      </mat-option>\\r\\n        <div *ngIf=\\\"signUpForm.submitted && !questionThree.valid\\\">\\r\\n          <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n        </div>\\r\\n          </mat-select>\\r\\n      </mat-form-field>--><br />\\r\\n  </div> \\r\\n  \\r\\n    <button class=\\\"button1\\\" mat-raised-button type=\\\"submit\\\">Register</button>\\r\\n    <br />\\r\\n    \\r\\n    <div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\r\\n      Saved successfully\\r\\n    </div>\\r\\n    \\r\\n    <!--Error message-->\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n      {{serverErrorMessages}}\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n  \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { User } from '../models/user';\r\n//import { UserService } from '../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { QuestionService } from '../services/question.service';\r\nimport { Question } from '../models/question';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n  providers: [AuthService]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  showSucessMessage: boolean;\r\n  serverErrorMessages: string;\r\n  questions: Question[];\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private questionService: QuestionService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllQuestions();\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.authService.postUser(form.value).subscribe(\r\n      res => {\r\n        this.showSucessMessage = true;\r\n        setTimeout(() => this.showSucessMessage = false, 4000);\r\n        this.resetForm(form);\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join('<br/>');\r\n        }\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong.Please try again';\r\n      }\r\n    );\r\n  }\r\n\r\n  /*checkPasswords(form: NgForm){\r\n    let password = group.controls.password.value;\r\n    let confirmPassword = group.controls.confirmPassword.value;\r\n\r\n    return password === confirmPassword ? null : { notSame: true }\r\n  }*/\r\n\r\n  resetForm(form: NgForm) {\r\n    this.authService.selectedUser = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      streetAddress: '',\r\n      city: '',\r\n      state: '',\r\n      zipCode: '',\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      questionOne: {\r\n        questionName: '',\r\n        answer: ''\r\n      },\r\n      questionTwo: {\r\n        questionName: '',\r\n        answer: ''\r\n      },\r\n      questionThree: {\r\n        questionName: '',\r\n        answer: ''\r\n      },\r\n      role: 'standard'\r\n    };\r\n    form.resetForm();\r\n    this.serverErrorMessages = '';\r\n  }\r\n\r\n  getAllQuestions(): void {\r\n    this.questionService.getAllQuestions()\r\n    .subscribe(questions => this.questions = questions)\r\n  }\r\n\r\n}\r\n","module.exports = \".formGroup {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.formGroup button {\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.mat-submit {\\r\\n    background-color: green;\\r\\n    color: #fff;\\r\\n}\\r\\n\"","module.exports = \"<h2> Reset Your Password </h2>\\r\\n<form class=\\\"formGroup\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">New Password: </label>\\r\\n    <input \\r\\n      type=\\\"password\\\" \\r\\n      id=\\\"password\\\" \\r\\n      class=\\\"form-control\\\" >    \\r\\n  </div><br>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"confirmPassword\\\">Confirm Password: </label>\\r\\n    <input \\r\\n      type=\\\"password\\\" \\r\\n      class=\\\"form-control\\\" \\r\\n      id=\\\"confirmPassword\\\">\\r\\n  </div>\\r\\n</form><br>\\r\\n\\r\\n<a mat-raised-button=\\\"'cancel'\\\" [routerLink]=\\\"['/']\\\">Cancel</a>\\r\\n<a mat-raised-button [color]=\\\"'submit'\\\" [routerLink]=\\\"['/']\\\">Submit</a>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 75%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field-empty.mat-form-field-label {\\r\\n    color:#020024;\\r\\n    background-color: red;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    color: black;\\r\\n    background-color: white;\\r\\n    opacity: 50%;\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  h3 {\\r\\n    background-color: #19ccd0;\\r\\n    color: rgb(58, 57, 57);\\r\\n    opacity: 50%;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-radius: 10px;\\r\\n}\"","module.exports = \"<h2>Create New Role</h2>\\r\\n  <form class=\\\"formGroup\\\" #addRoleForm=\\\"ngForm\\\" (ngSubmit)=\\\"addRoleForm.valid && onSubmit(addRoleForm)\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #roleId=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"roleService.selectedRole.roleId\\\"\\r\\n        name=\\\"roleId\\\"\\r\\n        placeholder=\\\"Role Id\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :addRoleForm.submitted && !roleId.valid }\\\">\\r\\n      </mat-form-field><br />\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n        type=\\\"text\\\"\\r\\n        #lastName=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"roleService.selectedRole.roleName\\\"\\r\\n        name=\\\"roleName\\\"\\r\\n        placeholder=\\\"Role Name\\\" \\r\\n        required\\r\\n        [ngClass]=\\\"{'invalid-textbox' :addRoleForm.submitted && !roleName.valid }\\\">\\r\\n      </mat-form-field><br />\\r\\n      <br />\\r\\n      \\r\\n      \\r\\n  </div> \\r\\n  \\r\\n    <button class=\\\"button1\\\" mat-raised-button type=\\\"submit\\\">Add Role</button>\\r\\n    <br />\\r\\n    \\r\\n    <div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\r\\n      Saved successfully\\r\\n    </div>\\r\\n    \\r\\n    <!-- Error message -->\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n      {{serverErrorMessages}}\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n<h3>Role Management</h3>\\r\\n<table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Role ID</th>\\r\\n            <th scope=\\\"col\\\">Role Name</th>\\r\\n            <th scope=\\\"col\\\">Last Updated</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let role of roles\\\">\\r\\n            <th scope=\\\"row\\\">{{role.roleId}}</th>\\r\\n            <td>{{role.roleName}}</td>\\r\\n            <td>{{role.dateUpdated | date: 'MMM d, y'}}</td>\\r\\n            <td><button (click)=\\\"onDelete(role.roleId, addRoleForm)\\\"><mat-icon>delete</mat-icon></button></td>\\r\\n            <td><button (click)=\\\"onEdit(role)\\\"><mat-icon>edit</mat-icon></button></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <form>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Edit User</button>&nbsp;\\r\\n        <button class=\\\"button3\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/management']\\\">Delete User</button>&nbsp;\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n      </form>\\r\\n\\r\\n\\r\\n      \"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { RoleService } from '../services/role.service';\r\nimport { Role } from '../models/role';\r\n\r\n@Component({\r\n  selector: 'app-role-manager',\r\n  templateUrl: './role-manager.component.html',\r\n  styleUrls: ['./role-manager.component.css']\r\n})\r\nexport class RoleManagerComponent implements OnInit {\r\n  showSucessMessage: boolean;\r\n  serverErrorMessages: string;\r\n  roles: Role[]\r\n  constructor(private roleService: RoleService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllRoles();\r\n    this.refreshRoleList();\r\n    this.resetForm();\r\n    \r\n  }\r\n  onSubmit(form: NgForm) {\r\n    this.roleService.postRole(form.value).subscribe(\r\n      res => {\r\n        this.refreshRoleList();\r\n        this.resetForm();\r\n        this.getAllRoles();\r\n        alert ('Saved successfully')\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join('<br/>');\r\n        }\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong.Please try again';\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if (form)\r\n    form.reset();\r\n    this.roleService.selectedRole = {\r\n      roleId: '',\r\n      roleName: ''\r\n    };\r\n  }\r\n\r\n  getAllRoles(): void {\r\n    this.roleService.getAllRoles()\r\n    .subscribe(roles => this.roles = roles)\r\n  }\r\n\r\n  onDelete(roleName: string, form: NgForm) {\r\n    if(confirm ('Are you sure you want to delete this role?') == true) {\r\n      this.roleService.deleteRole(roleName).subscribe((res) => {\r\n        this.getAllRoles();\r\n        alert('Deleted successfully')\r\n      })\r\n    }\r\n  }\r\n\r\n  onEdit(role: Role) {\r\n    this.roleService.selectedRole = role;\r\n    this.getAllRoles();\r\n      \r\n  }\r\n\r\n  refreshRoleList() {\r\n    this.roleService.getAllRoles().subscribe((res) => {\r\n      this.roleService.roles = res as Role[];\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n.button {\\r\\n        font-size: 16px;\\r\\n        position: relative;\\r\\n        left: 160px;\\r\\n        bottom: 10px;\\r\\n        padding-top: 10px;\\r\\n        padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n    font-size: 20px;\\r\\n    padding-top: 10px;\\r\\n    padding-left: 40px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n\\r\\n.example-container > * {\\r\\n    padding-right: 100px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n\"","module.exports = \"<div class=\\\"Form\\\">\\r\\n    <h2>Security Questions</h2>\\r\\n    <form class=\\\"formGroup\\\">\\r\\n      <h4>Select each question below and provide an answer :</h4>\\r\\n      <div class=\\\"example-container\\\"><br />\\r\\n<mat-form-field>\\r\\n  <select matNativeControl>\\r\\n    <option>Question One</option>\\r\\n    <option value=\\\"q1a1\\\">What's the name of your first pet?</option>\\r\\n    <option value=\\\"q1a2\\\">What is your father's middle name?</option>\\r\\n    <option value=\\\"q1a3\\\">What is your favorite movie?</option>\\r\\n  </select>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Your Answer\\\" onfocus=\\\"this.placeholder=''\\\" onblur=\\\"this.placeholder='Enter Here'\\\" required=\\\"true\\\"/>        \\r\\n</mat-form-field><br />\\r\\n<br>\\r\\n<mat-form-field>\\r\\n   <select matNativeControl>\\r\\n     <option>Question Two</option>\\r\\n     <option value=\\\"q2a1\\\">Which town did you grow up in?</option>\\r\\n     <option value=\\\"q2a2\\\">Who was your first grade teacher?</option>\\r\\n     <option value=\\\"q2a3\\\">What was the name of your high school?</option>\\r\\n  </select>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Your Answer\\\" onfocus=\\\"this.placeholder=''\\\" onblur=\\\"this.placeholder='Enter Here'\\\" required=\\\"true\\\"/>\\r\\n  </mat-form-field><br />\\r\\n<br>\\r\\n<mat-form-field>\\r\\n   <select matNativeControl>\\r\\n      <option>Question Three</option>\\r\\n      <option value=\\\"q3a1\\\">Where is your favorite place to eat?</option>\\r\\n      <option value=\\\"q3a2\\\">What is a nickname you have?</option>\\r\\n      <option value=\\\"q3a3\\\">Who is your favorite singer/artist?</option>\\r\\n  </select>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Your Answer\\\" onfocus=\\\"this.placeholder=''\\\" onblur=\\\"this.placeholder='Enter Here'\\\" required=\\\"true\\\"/>\\r\\n</mat-form-field>\\r\\n<br>\\r\\n</div><br><br>\\r\\n<div class=\\\"button\\\">\\r\\n    <button class=\\\"button1\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/login']\\\">Cancel</button>&nbsp;\\r\\n    <button class=\\\"button2\\\" mat-raised-button (click)=\\\"'Submit'\\\" [routerLink]=\\\"['/about']\\\">Submit</button>\\r\\n  <br /> <br />\\r\\n</div>\\r\\n  </form>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-security-questions',\r\n  templateUrl: './security-questions.component.html',\r\n  styleUrls: ['./security-questions.component.css']\r\n})\r\nexport class SecurityQuestionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\nh2 {\\r\\n    background-color: #12afb5;\\r\\n    color: rgb(58, 57, 57);\\r\\n   \\r\\n    width: 100%;\\r\\n    \\r\\n    \\r\\n    border-top-right-radius: 5px;\\r\\n    border-top-left-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  body{\\r\\n    background-size: 0;\\r\\n  }\\r\\n  \\r\\n  .services-page {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n  }\\r\\n  \\r\\n  .example-container {\\r\\n      color: black;\\r\\n      background-color: white;\\r\\n      border-top-right-radius: 5px;\\r\\n      border-top-left-radius: 5px;\\r\\n      border-bottom-right-radius: 5px;\\r\\n      border-bottom-left-radius: 5px;\\r\\n    }\\r\\n  \\r\\n  .vl {\\r\\n      border-left: 1px solid rgb(193, 194, 193);\\r\\n      height: 400px;\\r\\n      position: absolute;\\r\\n      left: 50%;\\r\\n      margin-left: -3px;\\r\\n      top: 30%;\\r\\n      padding-right: 30px;\\r\\n      padding-left: 30px;\\r\\n    }\\r\\n  \\r\\n  .example-container2 {\\r\\n      \\r\\n      padding-left: 40px;\\r\\n      margin: 0;\\r\\n    }\\r\\n  \\r\\n  .example-container2 > * {\\r\\n      padding-right: 20px;\\r\\n      width: 90%;\\r\\n    }\\r\\n  \\r\\n  p {\\r\\n      \\r\\n      font-weight: bold;\\r\\n    }\\r\\n  \\r\\n  li {\\r\\n        list-style: none;\\r\\n        cursor: pointer;\\r\\n        padding-bottom: 25px;\\r\\n    }\\r\\n  \\r\\n  .button {\\r\\n      padding: 10px;\\r\\n      margin: 10px;\\r\\n    }\\r\\n  \\r\\n  .select-service {\\r\\n      padding: 10px;\\r\\n      margin: 10px;\\r\\n    }\\r\\n  \\r\\n  .review-service {\\r\\n      padding: 10px;\\r\\n      margin: 10px;\\r\\n    }\"","module.exports = \"<div class=\\\"services-page\\\">\\r\\n  <div class=\\\"example-container\\\">\\r\\n      <h2>Available Services</h2>\\r\\n    <div class=\\\"select-service\\\">\\r\\n      <p>Please select from the following sevices and repairs</p>\\r\\n      <ul class=\\\"services\\\">\\r\\n        <li *ngFor=\\\"let repair of repairs\\\" (click)=\\\"selectedService(repair)\\\"> {{repair.repairName}} <span class=\\\"badge\\\">{{repair.price}}</span></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n    <br>\\r\\n    <br>\\r\\n    <div class=\\\"example-container\\\">\\r\\n        <h2>Selected Services</h2>\\r\\n      <div class=\\\"review-service\\\">\\r\\n        <br>\\r\\n        <div >\\r\\n        <h3 *ngIf=\\\"user\\\">{{user.firstName}}</h3>\\r\\n        </div>\\r\\n        <ul>\\r\\n          <li *ngFor=\\\"let selectedService of cart\\\"><button class=\\\"button1\\\" (click)=\\\"removeService(repair)\\\">remove</button>  {{selectedService.repairName}}: {{selectedService.price}}</li>\\r\\n        </ul>\\r\\n        <p>Labor: $50.00</p>\\r\\n        <p>Subtotal: </p>\\r\\n        <button class=\\\"button2\\\" mat-raised-button (click)=\\\"'Submit'\\\" >Submit</button>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RepairService } from '../services/repair.service';\r\nimport { Repair } from '../models/repair';\r\nimport { AuthService, UserDetails, } from '../services/auth.service';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Component({\r\n  selector: 'app-service-repair',\r\n  templateUrl: './service-repair.component.html',\r\n  styleUrls: ['./service-repair.component.css']\r\n})\r\nexport class ServiceRepairComponent implements OnInit {\r\n  repairs: Repair[];\r\n  recentService = \"\";\r\n  private cart = [];\r\n  user: User;\r\n  details: UserDetails;\r\n  //currentUser: User;\r\n  \r\n  constructor(\r\n    private repairService: RepairService,\r\n    private authService: AuthService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllRepairs();\r\n    //this.currentUser = JSON.parse(localStorage.getItem('currentUser'))\r\n    this.authService.getUserProfile().subscribe(\r\n      user => {\r\n        this.user = user;\r\n      }, (err) => { \r\n        console.log(err);\r\n        \r\n      });\r\n  }\r\n  getAllRepairs(): void {\r\n    this.repairService.getAllRepairs()\r\n    .subscribe(repairs => this.repairs = repairs)\r\n  }\r\n\r\n  selectedService(repair){\r\n    this.recentService = repair;\r\n    this.cart.push(repair);\r\n  }\r\n\r\n  removeService(repair, index){\r\n    this.cart.splice(index, 1);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Router } from \"@angular/router\";\r\n\r\nexport interface UserDetails {\r\n  userId: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  exp: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  selectedUser: User = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    streetAddress: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    questionOne: {\r\n      questionName: '',\r\n      answer: ''\r\n    },\r\n    questionTwo: {\r\n      questionName: '',\r\n      answer: ''\r\n    },\r\n    questionThree: {\r\n      questionName: '',\r\n      answer: ''\r\n    },\r\n    role: 'standard'\r\n  };\r\n  \r\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\r\n  redirectUrl: string;\r\n  loggedIn = false;\r\n  private token: string;\r\n  private registerUrl = '/api/register';\r\n  private loginUrl = '/api/login';\r\n  private userUrl = '/api/user';\r\n  private profileUrl ='/api/profile';\r\n  private tokenUrl = '/api/token';\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  //create new users\r\n  postUser(user: User){\r\n    return this.http.post('/api/register',user);\r\n  }\r\n\r\n  //get all users\r\n  getUser (): Observable<User[]> {\r\n    return this.http.get<User[]>(this.userUrl)\r\n  }\r\n\r\n  login(authCredentials) {\r\n    return this.http.post(this.loginUrl, authCredentials,this.noAuthHeader);\r\n  }\r\n\r\n  getUserProfile(): Observable<any> {\r\n    return this.http.get(this.profileUrl)\r\n  }\r\n\r\n  setToken(token: string): void {\r\n    localStorage.setItem('token', token);\r\n    this.token = token;\r\n  }\r\n\r\n  getToken(): string {\r\n    if(!this.token) {\r\n    this.token = localStorage.getItem('token');\r\n    }\r\n    return this.token;\r\n  }\r\n  \r\n\r\n  deleteToken(): void {\r\n    this.token = '';\r\n    window.localStorage.removeItem('token');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  getUserPayload(): UserDetails {\r\n    const token = this.getToken();\r\n    let userPayload;\r\n    if (token) {\r\n      userPayload = token.split('.')[1];\r\n      userPayload = window.atob(userPayload);\r\n      return JSON.parse(userPayload);\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    const user = this.getUserPayload();\r\n    if (user) {\r\n      return user !== null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Question } from '../models/question';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n  selectedQuestion: Question = {\r\n    questionId: '',\r\n    questionName: ''\r\n    };\r\n    questions: Question[];\r\n  constructor(private http: HttpClient) { }\r\n\r\n//get all questions\r\ngetAllQuestions (): Observable<Question[]> {\r\n  return this.http.get<Question[]>('/api/question')\r\n}\r\n\r\npostQuestion(question: Question){\r\n  return this.http.post('/api/addQuestion', question);\r\n}\r\n\r\ndeleteQuestion(questionId: string) {\r\n  return this.http.delete('/api/removeQuestion/:questionId');\r\n}\r\n\r\nupdateQuestion(question: Question) {\r\n  return this.http.put('/api/updateQuestion/:questionId', question)\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Repair } from '../models/repair';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepairService {\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  //get all roles\r\n  getAllRepairs (): Observable<Repair[]> {\r\n    return this.http.get<Repair[]>('/api/repair')\r\n  }\r\n\r\n  postRepair(repair: Repair){\r\n    return this.http.post('/api/addRepair', repair);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Role } from '../models/role';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  selectedRole: Role = {\r\n    roleId: '',\r\n    roleName: ''\r\n    };\r\n\r\n  roles: Role[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //get all roles\r\n  getAllRoles (): Observable<Role[]> {\r\n    return this.http.get<Role[]>('/api/role')\r\n  }\r\n\r\n  postRole(role: Role){\r\n    return this.http.post('/api/addRole', role);\r\n  }\r\n\r\n  deleteRole(roleId: string) {\r\n    return this.http.delete('/api/removeRole/:roleId');\r\n  }\r\n\r\n  updateRole(role: Role) {\r\n    return this.http.put('/api/updateRole/:roleId', role)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  selectedUser: User = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    streetAddress: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    questionOne: {\r\n      questionName: '',\r\n      answer: ''\r\n    },\r\n    questionTwo: {\r\n      questionName: '',\r\n      answer: ''\r\n    },\r\n    questionThree: {\r\n      questionName: '',\r\n      answer: ''\r\n    },\r\n    role: 'standard'\r\n  };\r\n  \r\n  //private registerUrl = '/api/register';\r\n  private userUrl = '/api/user';\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  //create new users\r\n  postUser(user: User){\r\n    return this.http.post('/api/register',user);\r\n  }\r\n\r\n  //get all users\r\n  getUser (): Observable<User[]> {\r\n    return this.http.get<User[]>(this.userUrl)\r\n  }\r\n\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}